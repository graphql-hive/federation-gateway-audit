name: ci
on:
  pull_request: {}
  push:
    branches: ["main"]

permissions:
  pull-requests: write
  contents: read

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 22.4
          cache: "npm"

      - name: install
        run: npm ci

      - name: subgraphs
        run: |
          npm run dev &
          npx wait-on http-get://localhost:4200/_health --timeout 5s --verbose

      - name: gateway
        run: |
          npm run gateway:once &
          npx wait-on http-get://localhost:4000/_health --timeout 5s --verbose

      - name: test
        run: npm run test

  gateways:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 22.4
          cache: "npm"

      - name: install
        run: |
          npm ci
          (cd gateways && make install)

      - name: subgraphs
        run: |
          npm run dev &
          npx wait-on http-get://localhost:4200/_health --timeout 5s --verbose

      - name: gateways
        working-directory: gateways
        run: make test-all BASE_URL="http://localhost:4200"

      - name: summary
        working-directory: gateways
        run: |
          cat ./summary.txt
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "summary<<$EOF" >> "$GITHUB_ENV"
          cat ./summary.md >> "$GITHUB_ENV"
          echo "$EOF" >> "$GITHUB_ENV"

      - name: publish summary
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: Compatibility Summary
          message: ${{ env.summary }}

  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    needs: tests
    if: github.ref == 'refs/heads/main'
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"

      - name: install
        run: npm ci

      - name: deploy
        run: npm run deploy
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
